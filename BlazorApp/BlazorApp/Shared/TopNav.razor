@inject HttpClient Http
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject NavigationManager NavigationManager

@using BlazorApp.Pages

<AuthComponent @ref="authComponent" />
<LocalStorageComponent @ref="localStorageComponent" />

<nav class="navbar navbar-expand-lg navbar-dark bg-dark py-3">

    <div class="container">

        <a class="navbar-brand" href="/home"><h2>Iasi Royal Residence</h2></a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>

        <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <ul class="navbar-nav ml-auto">
                @if (userIsLoggedIn)
                {
                    <li class="nav-item dropdown ml-2">
                        <a class="dropdown-toggle btn btn-outline-light bg-light text-dark" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            Hi, @username
                        </a>
                        <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                            <a class="dropdown-item" href="/bookings">My bookings</a>
                            @if (userIsStaff)
                            {
                                <a class="dropdown-item" href="/tasks">My tasks</a>
                            }
                            @if (userIsManager)
                            {
                                <a class="dropdown-item" href="/management/rooms">Rooms overview</a>
                                <a class="dropdown-item" href="/management/staff">Staff management</a>
                            }
                            <div class="dropdown-divider"></div>
                            <a class="dropdown-item" href="#" @onclick='LogOut'>Logout</a>
                        </div>
                    </li>
                }
                @if (!userIsLoggedIn)
                {
                    <li class="nav-item ml-2">
                        <a class="btn btn-outline-light bg-light text-dark" href="register">Register</a>
                    </li>
                    <li class="nav-item ml-2">
                        <a class="btn btn-outline-light bg-light text-dark" href="login">Sign in</a>
                    </li>
                }
            </ul>
        </div>

    </div>

</nav>


@code {

    private AuthComponent authComponent;
    private LocalStorageComponent localStorageComponent;

    string username;
    bool userIsLoggedIn;
    bool userIsManager;
    bool userIsStaff;


    /* manipulate components references after the component has finished rendering */
    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender)
        {
            Console.WriteLine("not first render");
            return;
        }
        Console.WriteLine("first render");

        if (await authComponent.UserIsLoggedIn())
        {
            userIsLoggedIn = true;
            username = await localStorageComponent.GetUsername();
            userIsManager = await localStorageComponent.UserIsManager();
            userIsStaff = await localStorageComponent.UserIsStaff();
        }
        else
        {
            userIsLoggedIn = false;
        }

        this.StateHasChanged(); // notifies the component that its state has changed
    }


    public async void LogOut()
    {
        await localStorageComponent.ClearLocalStorage();
        NavigationManager.NavigateTo("/login", true);
    }
}
