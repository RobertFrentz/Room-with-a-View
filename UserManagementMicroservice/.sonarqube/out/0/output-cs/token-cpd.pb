è§
ÖC:\Users\alexg\Documents\GitHub\Room-with-a-View\UserManagementMicroservice\UserManagementMicroservice\Controllers\UsersController.cs
	namespace 	&
UserManagementMicroservice
 $
.$ %
Controllers% 0
{ 
[ 
Route 

(
 
$str 
) 
] 
[ 
ApiController 
] 
public 

class 
UsersController  
:! "
ControllerBase# 1
{ 
private 
readonly 
IUsersRepository )
_repository* 5
;5 6
[ 	)
ActivatorUtilitiesConstructor	 &
]& '
public 
UsersController 
( 
IUsersRepository /

repository0 :
): ;
{ 	
_repository 
= 

repository $
;$ %
} 	
public 
UsersController 
( 
)  
{ 	
}   	
[!! 	
HttpGet!!	 
]!! 
public"" 
async"" 
Task"" 
<"" 
IActionResult"" '
>""' (
GetAllAsync"") 4
(""4 5
[""5 6

FromHeader""6 @
]""@ A
string""B H
authorizationToken""I [
)""[ \
{## 	
var$$ 
result$$ 
=$$ 
	CheckAuth$$  
($$  !
authorizationToken$$! 3
)$$3 4
as$$5 7
ObjectResult$$8 D
;$$D E
var%% 
response%% 
=%% 
await%%  
_repository%%! ,
.%%, -
GetAllAsync%%- 8
(%%8 9
Jwt%%9 <
.%%< =
ExtractUserId%%= J
(%%J K
result%%K Q
.%%Q R
Value%%R W
.%%W X
ToString%%X `
(%%` a
)%%a b
)%%b c
)%%c d
;%%d e
if&& 
(&& 
response&& 
==&& 
null&&  
)&&  !
{'' 
return(( 
Unauthorized(( #
(((# $
new(($ '
Error((( -
(((- .
$str((. I
)((I J
)((J K
;((K L
})) 
return** 
Ok** 
(** 
response** 
)** 
;**  
}++ 	
[-- 	
HttpGet--	 
(-- 
$str-- 
,-- 
Name-- 
=-- 
$str--  )
)--) *
]--* +
public.. 
async.. 
Task.. 
<.. 
User.. 
>.. 
GetById..  '
(..' (
int..( +
id.., .
)... /
=>..0 2
await..3 8
_repository..9 D
...D E
GetByIdAsync..E Q
(..Q R
id..R T
)..T U
;..U V
[11 	
Route11	 
(11 
$str11 
)11 
]11  
[22 	
HttpGet22	 
]22 
public44 
IActionResult44 
	CheckAuth44 &
(44& '
[44' (

FromHeader44( 2
]442 3
string444 :
authorizationToken44; M
)44M N
{55 	
var66 
result66 
=66 
Jwt66 
.66 
CheckJWT66 %
(66% &
authorizationToken66& 8
)668 9
;669 :
if77 
(77 
!77 
Jwt77 
.77 

IsValidJWT77 
(77  
result77  &
)77& '
)77' (
{88 
return99 
Unauthorized99 #
(99# $
new99$ '
Error99( -
(99- .
result99. 4
)994 5
)995 6
;996 7
}:: 
return;; 
Ok;; 
(;; 
result;; 
);; 
;;; 
}<< 	
[>> 	
Route>>	 
(>> 
$str>>  
)>>  !
]>>! "
[?? 	
HttpGet??	 
]?? 
public@@ 
async@@ 
Task@@ 
<@@ 
IActionResult@@ '
>@@' (!
VerifyAdminPrivileges@@) >
(@@> ?
string@@? E
json@@F J
)@@J K
{AA 	
varBB 
resultBB 
=BB 
awaitBB 
_repositoryBB *
.BB* +
HasAdminPrivilegesBB+ =
(BB= >
JwtBB> A
.BBA B
ExtractUserIdBBB O
(BBO P
jsonBBP T
)BBT U
)BBU V
;BBV W
ifCC 
(CC 
!CC 
resultCC 
)CC 
{DD 
returnEE 
UnauthorizedEE #
(EE# $
newEE$ '
ErrorEE( -
(EE- .
$strEE. I
)EEI J
)EEJ K
;EEK L
}FF 
returnGG 
OkGG 
(GG 
resultGG 
)GG 
;GG 
}HH 	
[JJ 	
RouteJJ	 
(JJ 
$strJJ 
)JJ 
]JJ 
[KK 	
HttpGetKK	 
]KK 
publicLL 
asyncLL 
TaskLL 
<LL 
IActionResultLL '
>LL' (
GetByIdAsyncLL) 5
(LL5 6
[LL6 7

FromHeaderLL7 A
]LLA B
stringLLC I
authorizationTokenLLJ \
)LL\ ]
{MM 	
varNN 
resultNN 
=NN 
	CheckAuthNN "
(NN" #
authorizationTokenNN# 5
)NN5 6
asNN7 9
ObjectResultNN: F
;NNF G
ifOO 
(OO 
resultOO 
isOO $
UnauthorizedObjectResultOO 1
)OO1 2
{PP 
returnQQ 
resultQQ 
;QQ 
}RR 
varSS 
responseSS 
=SS 
awaitSS  
_repositorySS! ,
.SS, -
GetByIdAsyncSS- 9
(SS9 :
JwtSS: =
.SS= >
ExtractUserIdSS> K
(SSK L
resultSSL R
.SSR S
ValueSSS X
.SSX Y
ToStringSSY a
(SSa b
)SSb c
)SSc d
)SSd e
;SSe f
returnTT 
OkTT 
(TT 
responseTT 
)TT 
;TT  
}UU 	
[WW 	
RouteWW	 
(WW 
$strWW 
)WW 
]WW 
[XX 	
HttpGetXX	 
]XX 
publicYY 
asyncYY 
TaskYY 
<YY 
IActionResultYY '
>YY' (
GetUsernameAsyncYY) 9
(YY9 :
[YY: ;

FromHeaderYY; E
]YYE F
stringYYG M
authorizationTokenYYN `
)YY` a
{ZZ 	
var[[ 
result[[ 
=[[ 
	CheckAuth[[ "
([[" #
authorizationToken[[# 5
)[[5 6
as[[7 9
ObjectResult[[: F
;[[F G
if\\ 
(\\ 
result\\ 
is\\ $
UnauthorizedObjectResult\\ 2
)\\2 3
{]] 
return^^ 
result^^ 
;^^ 
}__ 
var`` 
user`` 
=`` 
await`` 
_repository`` (
.``( )
GetByIdAsync``) 5
(``5 6
Jwt``6 9
.``9 :
ExtractUserId``: G
(``G H
result``H N
.``N O
Value``O T
.``T U
ToString``U ]
(``] ^
)``^ _
)``_ `
)``` a
;``a b
ifaa 
(aa 
useraa 
==aa 
nullaa 
)aa 
{bb 
returncc 
NotFoundcc 
(cc  
newcc  #
Errorcc$ )
(cc) *
$strcc* ?
)cc? @
)cc@ A
;ccA B
}dd 
returnee 
Okee 
(ee 
JsonConvertee !
.ee! "
SerializeObjectee" 1
(ee1 2
newee2 5
{ee6 7
usernameee8 @
=eeA B
usereeC G
.eeG H
UsernameeeH P
}eeQ R
)eeR S
)eeS T
;eeT U
}ff 	
[hh 	
Routehh	 
(hh 
$strhh 
)hh 
]hh 
[ii 	
HttpPostii	 
]ii 
publicjj 
asyncjj 
Taskjj 
<jj 
IActionResultjj '
>jj' (
RegisterAsyncjj) 6
(jj6 7
UserRegisterDtojj7 F
userRegisterjjG S
,jjS T
intjjT W
rolejjX \
)jj\ ]
{kk 	
varll 
resultll 
=ll 
awaitll 
_repositoryll *
.ll* +
RegisterAsyncll+ 8
(ll8 9
userRegisterll9 E
,llE F
rolellG K
)llK L
;llL M
ifmm 
(mm 
resultmm 
==mm 
-mm 
$nummm 
)mm 
{nn 
returnoo 
Conflictoo 
(oo  
newoo  #
Erroroo$ )
(oo) *
$stroo* @
)oo@ A
)ooA B
;ooB C
}pp 
ifqq 
(qq 
resultqq 
==qq 
-qq 
$numqq 
)qq 
{rr 
returnss 
Conflictss 
(ss  
newss  #
Errorss$ )
(ss) *
$strss* C
)ssC D
)ssD E
;ssE F
}tt 
returnuu 
Okuu 
(uu 
resultuu 
)uu 
;uu 
}vv 	
[yy 	
Routeyy	 
(yy 
$stryy 
)yy  
]yy  !
[zz 	
HttpPostzz	 
]zz 
public{{ 
async{{ 
Task{{ 
<{{ 
IActionResult{{ '
>{{' (
RegisterGuestAsync{{) ;
({{; <
[{{< =
FromBody{{= E
]{{E F
UserRegisterDto{{G V
userRegister{{W c
){{c d
{|| 	
var}} 
result}} 
=}} 
await}} 
RegisterAsync}} ,
(}}, -
userRegister}}- 9
,}}9 :
$num}}; <
)}}< =
;}}= >
if~~ 
(~~ 
result~~ 
is~~  
ConflictObjectResult~~ .
)~~. /
{ 
return
ÄÄ 
result
ÄÄ 
;
ÄÄ 
}
ÅÅ 
return
ÇÇ 
CreatedAtAction
ÇÇ "
(
ÇÇ" #
nameof
ÇÇ# )
(
ÇÇ) *
GetById
ÇÇ* 1
)
ÇÇ1 2
,
ÇÇ2 3
new
ÇÇ4 7
{
ÇÇ8 9
id
ÇÇ: <
=
ÇÇ= >
result
ÇÇ? E
}
ÇÇF G
,
ÇÇG H
userRegister
ÇÇI U
)
ÇÇU V
;
ÇÇV W
}
ÉÉ 	
[
ÖÖ 	
Route
ÖÖ	 
(
ÖÖ 
$str
ÖÖ 
)
ÖÖ  
]
ÖÖ  !
[
ÜÜ 	
HttpPost
ÜÜ	 
]
ÜÜ 
public
áá 
async
áá 
Task
áá 
<
áá 
IActionResult
áá '
>
áá' ( 
RegisterAdminAsync
áá) ;
(
áá; <
[
áá< =

FromHeader
áá= G
]
ááG H
string
ááI O 
authorizationToken
ááP b
,
ááb c
[
áád e
FromBody
ááe m
]
áám n
UserRegisterDto
ááo ~
userRegisteráá ã
)ááã å
{
àà 	
var
ââ 
jsonObjectResult
ââ  
=
ââ! "
	CheckAuth
ââ# ,
(
ââ, - 
authorizationToken
ââ- ?
)
ââ? @
as
ââA C
ObjectResult
ââD P
;
ââP Q
if
ää 
(
ää 
jsonObjectResult
ää  
is
ää! #&
UnauthorizedObjectResult
ää$ <
)
ää< =
{
ãã 
return
åå 
jsonObjectResult
åå '
;
åå' (
}
çç 
var
éé 

priviliges
éé 
=
éé 
await
éé "#
VerifyAdminPrivileges
éé# 8
(
éé8 9
jsonObjectResult
éé9 I
.
ééI J
Value
ééJ O
.
ééO P
ToString
ééP X
(
ééX Y
)
ééY Z
)
ééZ [
;
éé[ \
if
èè 
(
èè 

priviliges
èè 
is
èè &
UnauthorizedObjectResult
èè 6
)
èè6 7
{
êê 
return
ëë 

priviliges
ëë !
;
ëë! "
}
íí 
var
ìì 
result
ìì 
=
ìì 
await
ìì 
RegisterAsync
ìì ,
(
ìì, -
userRegister
ìì- 9
,
ìì9 :
$num
ìì; <
)
ìì< =
;
ìì= >
if
îî 
(
îî 
result
îî 
is
îî "
ConflictObjectResult
îî .
)
îî. /
{
ïï 
return
ññ 
result
ññ 
;
ññ 
}
óó 
return
òò 
CreatedAtAction
òò "
(
òò" #
nameof
òò# )
(
òò) *
GetById
òò* 1
)
òò1 2
,
òò2 3
new
òò4 7
{
òò8 9
id
òò: <
=
òò= >
result
òò? E
}
òòF G
,
òòG H
userRegister
òòI U
)
òòU V
;
òòV W
}
ôô 	
[
õõ 	
Route
õõ	 
(
õõ 
$str
õõ 
)
õõ  
]
õõ  !
[
úú 	
HttpPost
úú	 
]
úú 
public
ùù 
async
ùù 
Task
ùù 
<
ùù 
IActionResult
ùù '
>
ùù' ( 
RegisterStaffAsync
ùù) ;
(
ùù; <
[
ùù< =

FromHeader
ùù= G
]
ùùG H
string
ùùI O 
authorizationToken
ùùP b
,
ùùb c
[
ùùd e
FromBody
ùùe m
]
ùùm n
UserRegisterDto
ùùo ~
userRegisterùù ã
)ùùã å
{
ûû 	
var
üü 
jsonObjectResult
üü  
=
üü! "
	CheckAuth
üü# ,
(
üü, - 
authorizationToken
üü- ?
)
üü? @
as
üüA C
ObjectResult
üüD P
;
üüP Q
if
†† 
(
†† 
jsonObjectResult
††  
is
††! #&
UnauthorizedObjectResult
††$ <
)
††< =
{
°° 
return
¢¢ 
jsonObjectResult
¢¢ '
;
¢¢' (
}
££ 
var
§§ 

priviliges
§§ 
=
§§ 
await
§§ "#
VerifyAdminPrivileges
§§# 8
(
§§8 9
jsonObjectResult
§§9 I
.
§§I J
Value
§§J O
.
§§O P
ToString
§§P X
(
§§X Y
)
§§Y Z
)
§§Z [
;
§§[ \
if
•• 
(
•• 

priviliges
•• 
is
•• &
UnauthorizedObjectResult
•• 6
)
••6 7
{
¶¶ 
return
ßß 

priviliges
ßß !
;
ßß! "
}
®® 
var
©© 
result
©© 
=
©© 
await
©© 
RegisterAsync
©© ,
(
©©, -
userRegister
©©- 9
,
©©9 :
$num
©©; <
)
©©< =
;
©©= >
if
™™ 
(
™™ 
result
™™ 
is
™™ "
ConflictObjectResult
™™ .
)
™™. /
{
´´ 
return
¨¨ 
result
¨¨ 
;
¨¨ 
}
≠≠ 
return
ÆÆ 
CreatedAtAction
ÆÆ "
(
ÆÆ" #
nameof
ÆÆ# )
(
ÆÆ) *
GetById
ÆÆ* 1
)
ÆÆ1 2
,
ÆÆ2 3
new
ÆÆ4 7
{
ÆÆ8 9
id
ÆÆ: <
=
ÆÆ= >
result
ÆÆ? E
}
ÆÆF G
,
ÆÆG H
userRegister
ÆÆI U
)
ÆÆU V
;
ÆÆV W
}
ØØ 	
[
±± 	
Route
±±	 
(
±± 
$str
±± 
)
±± 
]
±± 
[
≤≤ 	
HttpPost
≤≤	 
]
≤≤ 
public
≥≥ 
async
≥≥ 
Task
≥≥ 
<
≥≥ 
IActionResult
≥≥ '
>
≥≥' (

LoginAsync
≥≥) 3
(
≥≥3 4
[
≥≥4 5
FromBody
≥≥5 =
]
≥≥= > 
UserCredentialsDto
≥≥? Q
userCredentials
≥≥R a
)
≥≥a b
{
¥¥ 	
var
µµ 
user
µµ 
=
µµ 
await
µµ 
_repository
µµ (
.
µµ( )

LoginAsync
µµ) 3
(
µµ3 4
userCredentials
µµ4 C
)
µµC D
;
µµD E
if
∂∂ 
(
∂∂ 
user
∂∂ 
==
∂∂ 
null
∂∂ 
)
∂∂ 
{
∑∑ 
return
∏∏ 

BadRequest
∏∏ !
(
∏∏! "
new
∏∏" %
Error
∏∏& +
(
∏∏+ ,
$str
∏∏, G
)
∏∏G H
)
∏∏H I
;
∏∏I J
}
ππ 
string
∫∫ 
userRole
∫∫ 
=
∫∫ 
(
∫∫ 
(
∫∫  
Role
∫∫  $
)
∫∫$ %
user
∫∫% )
.
∫∫) *
Role
∫∫* .
)
∫∫. /
.
∫∫/ 0
ToString
∫∫0 8
(
∫∫8 9
)
∫∫9 :
;
∫∫: ;
return
ªª 
Ok
ªª 
(
ªª 
JsonConvert
ªª !
.
ªª! "
SerializeObject
ªª" 1
(
ªª1 2
new
ªª2 5
{
ªª6 7
jwt
ªª8 ;
=
ªª< =
Jwt
ªª> A
.
ªªA B
	CreateJWT
ªªB K
(
ªªK L
user
ªªL P
.
ªªP Q
Id
ªªQ S
,
ªªS T
$num
ªªU V
)
ªªV W
,
ªªW X
role
ªªY ]
=
ªª^ _
userRole
ªª` h
}
ªªi j
)
ªªj k
)
ªªk l
;
ªªl m
}
ææ 	
[
¿¿ 	
HttpPut
¿¿	 
]
¿¿ 
public
¡¡ 
async
¡¡ 
Task
¡¡ 
<
¡¡ 
IActionResult
¡¡ '
>
¡¡' (
UpdateAsync
¡¡) 4
(
¡¡4 5
[
¡¡5 6
FromBody
¡¡6 >
]
¡¡> ?
UserRegisterDto
¡¡@ O
user
¡¡P T
,
¡¡T U
[
¡¡U V

FromHeader
¡¡V `
]
¡¡` a
string
¡¡b h 
authorizationToken
¡¡i {
)
¡¡{ |
{
¬¬ 	
var
√√ 
result
√√ 
=
√√ 
	CheckAuth
√√ "
(
√√" # 
authorizationToken
√√# 5
)
√√5 6
as
√√7 9
ObjectResult
√√: F
;
√√F G
if
ƒƒ 
(
ƒƒ 
result
ƒƒ 
is
ƒƒ &
UnauthorizedObjectResult
ƒƒ 2
)
ƒƒ2 3
{
≈≈ 
return
∆∆ 
result
∆∆ 
;
∆∆ 
}
«« 
bool
»» 
	isUpdated
»» 
=
»» 
await
»» "
_repository
»»# .
.
»». /
UpdateAsync
»»/ :
(
»»: ;
user
»»; ?
,
»»? @
Jwt
»»A D
.
»»D E
ExtractUserId
»»E R
(
»»R S
result
»»S Y
.
»»Y Z
Value
»»Z _
.
»»_ `
ToString
»»` h
(
»»h i
)
»»i j
)
»»j k
)
»»k l
;
»»l m
if
…… 
(
…… 
!
…… 
	isUpdated
…… 
)
…… 
{
   
return
ÀÀ 
NotFound
ÀÀ 
(
ÀÀ  
new
ÀÀ  #
Error
ÀÀ$ )
(
ÀÀ) *
$str
ÀÀ* >
)
ÀÀ> ?
)
ÀÀ? @
;
ÀÀ@ A
}
ÃÃ 
return
ÕÕ 
	NoContent
ÕÕ 
(
ÕÕ 
)
ÕÕ 
;
ÕÕ 
}
ŒŒ 	
[
–– 	

HttpDelete
––	 
]
–– 
public
—— 
async
—— 
Task
—— 
<
—— 
IActionResult
—— '
>
——' (
DeleteAsync
——) 4
(
——4 5
[
——5 6

FromHeader
——6 @
]
——@ A
string
——B H 
authorizationToken
——I [
)
——[ \
{
““ 	
var
”” 
result
”” 
=
”” 
	CheckAuth
”” "
(
””" # 
authorizationToken
””# 5
)
””5 6
as
””7 9
ObjectResult
””: F
;
””F G
if
‘‘ 
(
‘‘ 
result
‘‘ 
is
‘‘ &
UnauthorizedObjectResult
‘‘ 2
)
‘‘2 3
{
’’ 
return
÷÷ 
result
÷÷ 
;
÷÷ 
}
◊◊ 
await
ÿÿ 
_repository
ÿÿ 
.
ÿÿ 
DeleteByIdAsync
ÿÿ -
(
ÿÿ- .
Jwt
ÿÿ. 1
.
ÿÿ1 2
ExtractUserId
ÿÿ2 ?
(
ÿÿ? @
result
ÿÿ@ F
.
ÿÿF G
Value
ÿÿG L
.
ÿÿL M
ToString
ÿÿM U
(
ÿÿU V
)
ÿÿV W
)
ÿÿW X
)
ÿÿX Y
;
ÿÿY Z
return
ŸŸ 
	NoContent
ŸŸ 
(
ŸŸ 
)
ŸŸ 
;
ŸŸ 
}
€€ 	
}
›› 
}ﬁﬁ ˙

zC:\Users\alexg\Documents\GitHub\Room-with-a-View\UserManagementMicroservice\UserManagementMicroservice\Data\DataContext.cs
	namespace 	&
UserManagementMicroservice
 $
.$ %
Data% )
{ 
public 

class 
DataContext 
: 
	DbContext (
{ 
public		 
DataContext		 
(		 
DbContextOptions		 +
options		, 3
)		3 4
:		5 6
base		7 ;
(		; <
options		< C
)		C D
{

 	
} 	
public 
DbSet 
< 
User 
> 
Users  
{! "
get# &
;& '
set( +
;+ ,
}- .
	protected 
override 
void 
OnModelCreating  /
(/ 0
ModelBuilder0 <
modelBuilder= I
)I J
{ 	
modelBuilder 
. 
Entity 
<  
User  $
>$ %
(% &
)& '
. 
Property !
(! "
user" &
=>' )
user* .
.. /
Id/ 1
)1 2
. 
ValueGeneratedOnAdd ,
(, -
)- .
;. /
} 	
} 
} »
C:\Users\alexg\Documents\GitHub\Room-with-a-View\UserManagementMicroservice\UserManagementMicroservice\Data\IUsersRepository.cs
	namespace 	&
UserManagementMicroservice
 $
.$ %
Data% )
{ 
public		 

	interface		 
IUsersRepository		 %
{

 
Task 
< 
int 
> 
RegisterAsync 
(  
UserRegisterDto  /
userRegister0 <
,< =
int> A
roleB F
)F G
;G H
Task 
< 
User 
> 

LoginAsync 
( 
UserCredentialsDto 0
userCredentials1 @
)@ A
;A B
Task 
< 
IEnumerable 
< 
User 
> 
> 
GetAllAsync  +
(+ ,
int, /
userId0 6
)6 7
;7 8
Task 
< 
User 
> 
GetByIdAsync 
(  
int  #
userId$ *
)* +
;+ ,
Task 
< 
bool 
> 
UpdateAsync 
( 
UserRegisterDto .
user/ 3
,3 4
int5 8
userId9 ?
)? @
;@ A
Task 
DeleteByIdAsync 
( 
int  
userId! '
)' (
;( )
Task 
< 
bool 
> 
HasAdminPrivileges %
(% &
int& )
userId* 0
)0 1
;1 2
} 
} ÷
ñC:\Users\alexg\Documents\GitHub\Room-with-a-View\UserManagementMicroservice\UserManagementMicroservice\Data\Migrations\20210420162254_InitialCreate.cs
	namespace 	&
UserManagementMicroservice
 $
.$ %
Data% )
.) *

Migrations* 4
{ 
public 

partial 
class 
InitialCreate &
:' (
	Migration) 2
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder		 
.		 
CreateTable		 (
(		( )
name

 
:

 
$str

 
,

 
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
int& )
>) *
(* +
type+ /
:/ 0
$str1 :
,: ;
nullable< D
:D E
falseF K
)K L
. 

Annotation #
(# $
$str$ :
,: ;
true< @
)@ A
,A B
Username 
= 
table $
.$ %
Column% +
<+ ,
string, 2
>2 3
(3 4
type4 8
:8 9
$str: @
,@ A
nullableB J
:J K
trueL P
)P Q
,Q R
Email 
= 
table !
.! "
Column" (
<( )
string) /
>/ 0
(0 1
type1 5
:5 6
$str7 =
,= >
nullable? G
:G H
trueI M
)M N
,N O
Password 
= 
table $
.$ %
Column% +
<+ ,
string, 2
>2 3
(3 4
type4 8
:8 9
$str: @
,@ A
nullableB J
:J K
trueL P
)P Q
,Q R
Role 
= 
table  
.  !
Column! '
<' (
int( +
>+ ,
(, -
type- 1
:1 2
$str3 <
,< =
nullable> F
:F G
falseH M
)M N
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% /
,/ 0
x1 2
=>3 5
x6 7
.7 8
Id8 :
): ;
;; <
} 
) 
; 
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
migrationBuilder 
. 
	DropTable &
(& '
name 
: 
$str 
) 
; 
} 	
} 
}   ö
sC:\Users\alexg\Documents\GitHub\Room-with-a-View\UserManagementMicroservice\UserManagementMicroservice\Data\Role.cs
	namespace 	&
UserManagementMicroservice
 $
.$ %
Data% )
{ 
public 

enum 
Role 
{		 
Guest

 
,

 
Admin 
, 
Staff 
} 
}  H
~C:\Users\alexg\Documents\GitHub\Room-with-a-View\UserManagementMicroservice\UserManagementMicroservice\Data\UsersRepository.cs
	namespace

 	&
UserManagementMicroservice


 $
.

$ %
Data

% )
{ 
public 

class 
UsersRepository  
:! "
IUsersRepository# 3
{ 
private 
readonly 
DataContext $
context% ,
;, -
public 
UsersRepository 
( 
DataContext *
context+ 2
)2 3
{ 	
this 
. 
context 
= 
context "
;" #
} 	
public 
async 
Task 
< 
int 
> 
RegisterAsync ,
(, -
UserRegisterDto- <
userRegister= I
,I J
intK N
roleO S
)S T
{ 	
if 
( 
this 
. 
context 
. 
Users !
.! "
Any" %
(% &
user& *
=>+ -
user. 2
.2 3
Username3 ;
==< >
userRegister? K
.K L
UsernameL T
)T U
)U V
{ 
return 
- 
$num 
; 
} 
if 
( 
this 
. 
context 
. 
Users !
.! "
Any" %
(% &
user& *
=>+ -
user. 2
.2 3
Email3 8
==9 ;
Cryptography< H
.H I

HashStringI S
(S T
userRegisterT `
.` a
Emaila f
)f g
)g h
)h i
{ 
return 
- 
$num 
; 
} 
User   
registerUser   
=   
new   "
(  # $
userRegister  $ 0
.  0 1
Username  1 9
,  9 :
userRegister  ; G
.  G H
Email  H M
,  M N
userRegister  O [
.  [ \
Password  \ d
,  d e
role  f j
)  j k
;  k l
var!! 
user!! 
=!! 
this!! 
.!! 
context!! #
.!!# $
Add!!$ '
(!!' (
Cryptography!!( 4
.!!4 5
SecureUserData!!5 C
(!!C D
registerUser!!D P
)!!P Q
)!!Q R
;!!R S
await"" 
this"" 
."" 
context"" 
."" 
SaveChangesAsync"" /
(""/ 0
)""0 1
;""1 2
return## 
user## 
.## 
Entity## 
.## 
Id## !
;##! "
}$$ 	
public&& 
async&& 
Task&& 
<&& 
User&& 
>&& 

LoginAsync&&  *
(&&* +
UserCredentialsDto&&+ =
userCredentials&&> M
)&&M N
{'' 	
var(( 
user(( 
=(( 
await(( 
this(( !
.((! "
context((" )
.(() *
Users((* /
.((/ 0
Where((0 5
(((5 6
user((6 :
=>((; =
user((> B
.((B C
Email((C H
==((I K
Cryptography((L X
.((X Y

HashString((Y c
(((c d
userCredentials((d s
.((s t
Email((t y
)((y z
&&))* ,
user))- 1
.))1 2
Password))2 :
==)); =
Cryptography))> J
.))J K

HashString))K U
())U V
userCredentials))V e
.))e f
Password))f n
)))n o
)))o p
.))p q 
FirstOrDefaultAsync	))q Ñ
(
))Ñ Ö
)
))Ö Ü
;
))Ü á
if** 
(** 
user** 
==** 
null** 
)** 
{++ 
return,, 
null,, 
;,, 
}-- 
return.. 
user.. 
;.. 
}00 	
public22 
async22 
Task22 
<22 
bool22 
>22 
UpdateAsync22  +
(22+ ,
UserRegisterDto22, ;
user22< @
,22@ A
int22B E
userId22F L
)22L M
{33 	
var44
 
result44 
=44 
this44 
.44 
context44 #
.44# $
Users44$ )
.44) *
Find44* .
(44. /
userId44/ 5
)445 6
;446 7
if55
 
(55 
result55 
==55 
null55 
)55 
{66 
return77 
false77 
;77 
}88 
result99
 
.99 
Username99 
=99 
user99  
.99  !
Username99! )
??99* ,
result99- 3
.993 4
Username994 <
;99< =
result::
 
.:: 
Email:: 
=:: 
Cryptography:: %
.::% &

HashString::& 0
(::0 1
user::1 5
.::5 6
Email::6 ;
)::; <
??::= ?
result::@ F
.::F G
Email::G L
;::L M
result;;
 
.;; 
Password;; 
=;; 
Cryptography;; (
.;;( )

HashString;;) 3
(;;3 4
user;;4 8
.;;8 9
Password;;9 A
);;A B
??;;C E
result;;F L
.;;L M
Password;;M U
;;;U V
await<<
 
this<< 
.<< 
context<< 
.<< 
SaveChangesAsync<< -
(<<- .
)<<. /
;<</ 0
return==
 
true== 
;== 
}>> 	
public@@ 
async@@ 
Task@@ 
<@@ 
IEnumerable@@ %
<@@% &
User@@& *
>@@* +
>@@+ ,
GetAllAsync@@- 8
(@@8 9
int@@9 <
userId@@= C
)@@C D
{AA 	
varBB 
resultBB 
=BB 
awaitBB 
thisBB #
.BB# $
contextBB$ +
.BB+ ,
UsersBB, 1
.BB1 2
	FindAsyncBB2 ;
(BB; <
userIdBB< B
)BBB C
;BBC D
ifCC 
(CC 
resultCC 
==CC 
nullCC 
||CC  
resultCC! '
.CC' (
RoleCC( ,
!=CC- /
$numCC0 1
)CC1 2
{DD 
returnEE 
nullEE 
;EE 
}FF 
returnGG 
awaitGG 
thisGG 
.GG 
contextGG %
.GG% &
UsersGG& +
.GG+ ,
ToListAsyncGG, 7
(GG7 8
)GG8 9
;GG9 :
}HH 	
publicJJ 
asyncJJ 
TaskJJ 
<JJ 
UserJJ 
>JJ 
GetByIdAsyncJJ  ,
(JJ, -
intJJ- 0
userIdJJ1 7
)JJ7 8
{KK 	
returnLL 
awaitLL 
thisLL 
.LL 
contextLL %
.LL% &
UsersLL& +
.LL+ ,
	FindAsyncLL, 5
(LL5 6
userIdLL6 <
)LL< =
;LL= >
}MM 	
publicOO 
asyncOO 
TaskOO 
DeleteByIdAsyncOO )
(OO) *
intOO* -
userIdOO. 4
)OO4 5
{PP 	
varQQ 
userQQ 
=QQ 
awaitQQ 
thisQQ !
.QQ! "
contextQQ" )
.QQ) *
UsersQQ* /
.QQ/ 0
	FindAsyncQQ0 9
(QQ9 :
userIdQQ: @
)QQ@ A
;QQA B
thisRR 
.RR 
contextRR 
.RR 
RemoveRR 
(RR  
userRR  $
)RR$ %
;RR% &
awaitSS 
thisSS 
.SS 
contextSS 
.SS 
SaveChangesAsyncSS /
(SS/ 0
)SS0 1
;SS1 2
}UU 	
publicVV 
asyncVV 
TaskVV 
<VV 
boolVV 
>VV 
HasAdminPrivilegesVV  2
(VV2 3
intVV3 6
userIdVV7 =
)VV= >
{WW 	
varXX 
userXX 
=XX 
awaitXX 
thisXX !
.XX! "
contextXX" )
.XX) *
UsersXX* /
.XX/ 0
	FindAsyncXX0 9
(XX9 :
userIdXX: @
)XX@ A
;XXA B
ifYY 
(YY 
userYY 
==YY 
nullYY 
)YY 
{ZZ 
return[[ 
false[[ 
;[[ 
}\\ 
if]] 
(]] 
user]] 
.]] 
Role]] 
==]] 
$num]] 
)]] 
{^^ 
return__ 
true__ 
;__ 
}`` 
returnaa 
falseaa 
;aa 
}bb 	
}cc 
}dd Õ
ÅC:\Users\alexg\Documents\GitHub\Room-with-a-View\UserManagementMicroservice\UserManagementMicroservice\DTOs\UserCredentialsDto.cs
	namespace 	&
UserManagementMicroservice
 $
.$ %
DTOs% )
{ 
public 

class 
UserCredentialsDto #
{ 
[ 	
RegularExpression	 
( 
$str 8
,8 9
ErrorMessage: F
=G H
$strI `
)` a
]a b
public		 
string		 
Email		 
{		 
get		 !
;		! "
set		# &
;		& '
}		( )
public

 
string

 
Password

 
{

  
get

! $
;

$ %
set

& )
;

) *
}

+ ,
} 
} ‚
~C:\Users\alexg\Documents\GitHub\Room-with-a-View\UserManagementMicroservice\UserManagementMicroservice\DTOs\UserRegisterDto.cs
	namespace 	&
UserManagementMicroservice
 $
.$ %
DTOs% )
{ 
public 

class 
UserRegisterDto  
{ 
public 
string 
Username 
{  
get! $
;$ %
set& )
;) *
}+ ,
[ 	
RegularExpression	 
( 
$str 8
,8 9
ErrorMessage: F
=G H
$strI `
)` a
]a b
public		 
string		 
Email		 
{		 
get		 !
;		! "
set		# &
;		& '
}		( )
public

 
string

 
Password

 
{

  
get

! $
;

$ %
set

& )
;

) *
}

+ ,
} 
} á
wC:\Users\alexg\Documents\GitHub\Room-with-a-View\UserManagementMicroservice\UserManagementMicroservice\Entities\User.cs
	namespace 	&
UserManagementMicroservice
 $
.$ %
Entities% -
{ 
public 

class 
User 
{ 
public 
User 
( 
) 
{ 	
}

 	
public 
User 
( 
string 
username #
,# $
string% +
email, 1
,1 2
string3 9
password: B
,B C
intC F
roleG K
)K L
{ 	
Username 
= 
username 
;  
Email 
= 
email 
; 
Password 
= 
password 
;  
Role 
= 
role 
; 
} 	
public 
User 
( 
int 
Id 
, 
string "
username# +
,+ ,
string- 3
email4 9
,9 :
string; A
passwordB J
)J K
{ 	
this 
. 
Id 
= 
Id 
; 
Username 
= 
username 
;  
Email 
= 
email 
; 
Password 
= 
password 
;  
} 	
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
string 
Username 
{  
get! $
;$ %
set& )
;) *
}+ ,
[ 	
RegularExpression	 
( 
$str 8
,8 9
ErrorMessage: F
=G H
$strI `
)` a
]a b
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
Password 
{  
get! $
;$ %
set& )
;) *
}+ ,
public!! 
int!! 
Role!! 
{!! 
get!! 
;!! 
set!! "
;!!" #
}!!$ %
}"" 
}## Ì

qC:\Users\alexg\Documents\GitHub\Room-with-a-View\UserManagementMicroservice\UserManagementMicroservice\Program.cs
	namespace 	&
UserManagementMicroservice
 $
{ 
public 

static 
class 
Program 
{ 
public 
static 
void 
Main 
(  
string  &
[& '
]' (
args) -
)- .
{		 	
CreateHostBuilder

 
(

 
args

 "
)

" #
.

# $
Build

$ )
(

) *
)

* +
.

+ ,
Run

, /
(

/ 0
)

0 1
;

1 2
} 	
public 
static 
IHostBuilder "
CreateHostBuilder# 4
(4 5
string5 ;
[; <
]< =
args> B
)B C
=>D F
Host 
.  
CreateDefaultBuilder %
(% &
args& *
)* +
. $
ConfigureWebHostDefaults )
() *

webBuilder* 4
=>5 7
{ 

webBuilder 
. 

UseStartup )
<) *
Startup* 1
>1 2
(2 3
)3 4
;4 5
} 
) 
; 
} 
} ä'
qC:\Users\alexg\Documents\GitHub\Room-with-a-View\UserManagementMicroservice\UserManagementMicroservice\Startup.cs
	namespace 	&
UserManagementMicroservice
 $
{ 
public 

class 
Startup 
{ 
readonly 
string $
MyAllowedSpecificOrigins 0
=1 2
$str3 J
;J K
public 
Startup 
( 
IConfiguration %
configuration& 3
)3 4
{ 	
Configuration 
= 
configuration )
;) *
} 	
public 
IConfiguration 
Configuration +
{, -
get. 1
;1 2
}3 4
public 
void 
ConfigureServices %
(% &
IServiceCollection& 8
services9 A
)A B
{ 	
services 
. 
AddControllers #
(# $
)$ %
;% &
services 
. 
AddDbContext !
<! "
DataContext" -
>- .
(. /
options/ 6
=>7 9
{ 
options   
.   
	UseSqlite   !
(  ! "
Configuration  " /
.  / 0
GetConnectionString  0 C
(  C D
$str  D W
)  W X
)  X Y
;  Y Z
}!! 
)!! 
;!! 
services## 
.## 
AddCors## 
(## 
options## $
=>##% '
{$$ 
options%% 
.%% 
	AddPolicy%% !
(%%! "$
MyAllowedSpecificOrigins%%" :
,%%: ;
builder%%< C
=>%%D F
{&& 
builder'' 
.'' 
AllowAnyHeader'' *
(''* +
)''+ ,
.(( 
AllowAnyMethod(( #
(((# $
)(($ %
.)) 
AllowAnyOrigin)) #
())# $
)))$ %
;))% &
}** 
)** 
;** 
}++ 
)++ 
;++ 
services,, 
.,, 
AddDataProtection,, &
(,,& '
),,' (
.-- &
UseCryptographicAlgorithms-- *
(--* +
new--+ ./
#AuthenticatedEncryptorConfiguration--/ R
(--R S
)--S T
{.. 
EncryptionAlgorithm// &
=//' (
EncryptionAlgorithm//) <
.//< =
AES_256_GCM//= H
,//H I
ValidationAlgorithm00 &
=00' (
ValidationAlgorithm00) <
.00< =

HMACSHA25600= G
}11 
)11 
;11 
services22 
.22 
AddTransient22 !
<22! "
IUsersRepository22" 2
,222 3
UsersRepository224 C
>22C D
(22D E
)22E F
;22F G
services33 
.33 
AddSwaggerGen33 "
(33" #
c33# $
=>33% '
{44 
c55 
.55 

SwaggerDoc55 
(55 
$str55 !
,55! "
new55# &
OpenApiInfo55' 2
{553 4
Title555 :
=55; <
$str55= Y
,55Y Z
Version55[ b
=55c d
$str55e i
}55j k
)55k l
;55l m
}66 
)66 
;66 
}77 	
public:: 
void:: 
	Configure:: 
(:: 
IApplicationBuilder:: 1
app::2 5
,::5 6
IWebHostEnvironment::7 J
env::K N
)::N O
{;; 	
if<< 
(<< 
env<< 
.<< 
IsDevelopment<< !
(<<! "
)<<" #
)<<# $
{== 
app>> 
.>> %
UseDeveloperExceptionPage>> -
(>>- .
)>>. /
;>>/ 0
app?? 
.?? 

UseSwagger?? 
(?? 
)??  
;??  !
app@@ 
.@@ 
UseSwaggerUI@@  
(@@  !
c@@! "
=>@@# %
c@@& '
.@@' (
SwaggerEndpoint@@( 7
(@@7 8
$str@@8 R
,@@R S
$str@@T s
)@@s t
)@@t u
;@@u v
}AA 
appCC 
.CC 
UseCorsCC 
(CC $
MyAllowedSpecificOriginsCC 0
)CC0 1
;CC1 2
appEE 
.EE 

UseRoutingEE 
(EE 
)EE 
;EE 
appGG 
.GG 
UseAuthorizationGG  
(GG  !
)GG! "
;GG" #
appII 
.II 
UseEndpointsII 
(II 
	endpointsII &
=>II' )
{JJ 
	endpointsKK 
.KK 
MapControllersKK (
(KK( )
)KK) *
;KK* +
}LL 
)LL 
;LL 
}MM 	
}NN 
}OO ú"
|C:\Users\alexg\Documents\GitHub\Room-with-a-View\UserManagementMicroservice\UserManagementMicroservice\Utils\Cryptography.cs
	namespace 	&
UserManagementMicroservice
 $
.$ %
Utils% *
{ 
public 

static 
class 
Cryptography $
{		 
private

 
static

 
readonly

 #
IDataProtectionProvider

  7#
_dataProtectionProvider

8 O
=

P Q"
DataProtectionProvider

R h
.

h i
Create

i o
(

o p
$str

p z
)

z {
;

{ |
private 
static 
readonly 
byte  $
[$ %
]% &
salt' +
=, -
{. /
$num0 4
,4 5
$num6 :
,: ;
$num< @
,@ A
$numB F
,F G
$numH L
,L M
$numN R
,R S
$numT X
,X Y
$numZ ^
,^ _
$num` d
,d e
$numf j
,j k
$numl p
,p q
$numr v
,v w
$numx |
,| }
$num	~ Ç
,
Ç É
$num
Ñ à
,
à â
$num
ä é
}
è ê
;
ê ë
private 
const 
string 
Key  
=! "
$str# @
;@ A
public 
static 
User 
SecureUserData )
() *
User* .
user/ 3
)3 4
{ 	
User 

userHashed 
= 
new !
(! "
user" &
.& '
Username' /
,/ 0

HashString1 ;
(; <
user< @
.@ A
EmailA F
)F G
,G H

HashStringI S
(S T
userT X
.X Y
PasswordY a
)a b
,b c
userd h
.h i
Rolei m
)m n
;n o
return 

userHashed 
; 
} 	
public 
static 
string 

HashString '
(' (
string( .
	plaintext/ 8
)8 9
{ 	
if 
( 
	plaintext 
== 
null  
)  !
{ 
return 
null 
; 
} 
string 
hashed 
= 
Convert #
.# $
ToBase64String$ 2
(2 3
KeyDerivation3 @
.@ A
Pbkdf2A G
(G H
password 
: 
	plaintext 
, 
salt 
: 
salt 
, 
prf 
: 
KeyDerivationPrf  
.  !
HMACSHA1! )
,) *
iterationCount 
: 
$num  
,  !
numBytesRequested 
: 
$num !
/" #
$num$ %
)% &
)& '
;' (
return 
hashed 
; 
}   	
public!! 
static!! 
string!! 
Encrypt!! $
(!!$ %
string!!% +
input!!, 1
)!!1 2
{"" 	
var## 
	protector## 
=## #
_dataProtectionProvider## 3
.##3 4
CreateProtector##4 C
(##C D
Key##D G
)##G H
;##H I
return$$ 
	protector$$ 
.$$ 
Protect$$ $
($$$ %
input$$% *
)$$* +
;$$+ ,
}%% 	
public'' 
static'' 
string'' 
Decrypt'' $
(''$ %
string''% +

cipherText'', 6
)''6 7
{(( 	
var)) 
	protector)) 
=)) #
_dataProtectionProvider)) 3
.))3 4
CreateProtector))4 C
())C D
Key))D G
)))G H
;))H I
return** 
	protector** 
.** 
	Unprotect** &
(**& '

cipherText**' 1
)**1 2
;**2 3
}++ 	
},, 
}-- Ï
uC:\Users\alexg\Documents\GitHub\Room-with-a-View\UserManagementMicroservice\UserManagementMicroservice\Utils\Error.cs
	namespace 	&
UserManagementMicroservice
 $
.$ %
Utils% *
{ 
public 

class 
Error 
{ 
public 
Error 
( 
string 
errorMessage (
)( )
{ 	
this 
. 
ErrorMessage 
= 
errorMessage  ,
;, -
} 	
public		 
string		 
ErrorMessage		 "
{		# $
get		% (
;		( )
set		* -
;		- .
}		/ 0
}

 
} ‡'
sC:\Users\alexg\Documents\GitHub\Room-with-a-View\UserManagementMicroservice\UserManagementMicroservice\Utils\Jwt.cs
	namespace

 	&
UserManagementMicroservice


 $
.

$ %
Utils

% *
{ 
public 

static 
class 
Jwt 
{ 
public 
static 
string 
	CreateJWT &
(& '
int' *
userId+ 1
,1 2
int3 6
time7 ;
); <
{ 	
var 
token 
= 
new 

JwtBuilder &
(& '
)' (
. 
WithAlgorithm )
() *
new* -
HMACSHA256Algorithm. A
(A B
)B C
)C D
. 

WithSecret &
(& '
$str' Q
)Q R
. 
AddClaim $
($ %
$str% *
,* +
DateTimeOffset, :
.: ;
UtcNow; A
.A B
AddHoursB J
(J K
timeK O
)O P
.P Q
ToUnixTimeSecondsQ b
(b c
)c d
)d e
. 
AddClaim $
($ %
$str% -
,- .
userId/ 5
)5 6
. 
Encode "
(" #
)# $
;$ %
return 
token 
; 
} 	
public 
static 
string 
CheckJWT %
(% &
string& ,
jwt- 0
)0 1
{ 	
string 
json 
; 
try 
{ 
IJsonSerializer 

serializer  *
=+ ,
new- 0
JsonNetSerializer1 B
(B C
)C D
;D E
var 
provider 
= 
new "
UtcDateTimeProvider# 6
(6 7
)7 8
;8 9
IJwtValidator   
	validator   '
=  ( )
new  * -
JwtValidator  . :
(  : ;

serializer  ; E
,  E F
provider  G O
)  O P
;  P Q
IBase64UrlEncoder!! !

urlEncoder!!" ,
=!!- .
new!!/ 2
JwtBase64UrlEncoder!!3 F
(!!F G
)!!G H
;!!H I
IJwtAlgorithm"" 
	algorithm"" '
=""( )
new""* -
HMACSHA256Algorithm"". A
(""A B
)""B C
;""C D
IJwtDecoder## 
decoder## #
=##$ %
new##& )

JwtDecoder##* 4
(##4 5

serializer##5 ?
,##? @
	validator##A J
,##J K

urlEncoder##L V
,##V W
	algorithm##X a
)##a b
;##b c
json$$ 
=$$ 
decoder$$ 
.$$ 
Decode$$ %
($$% &
jwt$$& )
,$$) *
$str$$+ U
,$$U V
verify$$W ]
:$$] ^
true$$_ c
)$$c d
;$$d e
}%% 
catch&& 
(&& !
TokenExpiredException&& (
)&&( )
{'' 
return(( 
$str(( *
;((* +
})) 
catch** 
(** *
SignatureVerificationException** 1
)**1 2
{++ 
return,, 
$str,, 4
;,,4 5
}-- 
return.. 
json.. 
;.. 
}// 	
public11 
static11 
bool11 

IsValidJWT11 %
(11% &
string11& ,
jwt11- 0
)110 1
{22 	
if33 
(33 
jwt33 
==33 
$str33 )
||33* ,
jwt33- 0
==331 3
$str334 Q
)33Q R
{44 
return55 
false55 
;55 
}66 
return77 
true77 
;77 
}88 	
public:: 
static:: 
int:: 
ExtractUserId:: '
(::' (
string::( .
jwt::/ 2
)::2 3
{;; 	
string<< 
claims<< 
=<< 
jwt<< 
.<<  
Split<<  %
(<<% &
$char<<& )
)<<) *
.<<* +
ToList<<+ 1
(<<1 2
)<<2 3
[<<3 4
$num<<4 5
]<<5 6
.<<6 7
Split<<7 <
(<<< =
$char<<= @
)<<@ A
.<<A B
ToList<<B H
(<<H I
)<<I J
[<<J K
$num<<K L
]<<L M
;<<M N
string== 
id== 
=== 
claims== 
.== 
Remove== %
(==% &
claims==& ,
.==, -
Length==- 3
-==4 5
$num==6 7
)==7 8
;==8 9
return>> 
Int32>> 
.>> 
Parse>> 
(>> 
id>> !
)>>! "
;>>" #
}?? 	
}@@ 
}AA 